/*
 * Compiles all protobuf files into proto.jar using the protobuf-gradle-plugin
 *
 *  https://github.com/google/protobuf-gradle-plugin
 *  https://github.com/google/protobuf-gradle-plugin/blob/master/examples/exampleProject/build.gradle
 */

buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.2'
    }
}

plugins {
    id 'garden_leave.java-common-conventions'
    id 'com.google.protobuf' version '0.9.2'
}

dependencies {
  if (JavaVersion.current().isJava9Compatible()) {
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633
    implementation 'javax.annotation:javax.annotation-api:1.3.1'
  }
}

protobuf {
  protoc {
    // The artifact spec for the Protobuf Compiler
    artifact = 'com.google.protobuf:protoc:3.22.2'
  }
  plugins {
    // Optional: an artifact spec for a protoc plugin, with "grpc" as
    // the identifier, which can be referred to in the "plugins"
    // container of the "generateProtoTasks" closure.
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.53.0'
    }
  }
  generateProtoTasks {
    ofSourceSet('main').configureEach {
      plugins {
        // Apply the "grpc" plugin whose spec is defined above, without
        // options. Note the braces cannot be omitted, otherwise the
        // plugin will not be added. This is because of the implicit way
        // NamedDomainObjectContainer binds the methods.
        grpc { }
      }
    }
  }
}
