/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    implementation 'com.google.protobuf:protobuf-java:3.22.2'
    implementation 'io.grpc:grpc-netty:1.53.0'
    implementation 'io.grpc:grpc-protobuf:1.53.0'
    implementation 'io.grpc:grpc-stub:1.53.0'

    // Note: io.grpc:grpc-netty:1.53.0 pulls in netty:4.1.79.Final
    implementation 'io.netty:netty-transport-native-epoll:4.1.79.Final'

    implementation 'ch.qos.logback:logback-core:1.3.5'
    implementation 'ch.qos.logback:logback-classic:1.3.5'
    implementation 'org.slf4j:slf4j-api:2.0.4'

    implementation 'io.opentelemetry:opentelemetry-api:1.24.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.24.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.24.0'
    implementation 'io.opentelemetry:opentelemetry-semconv:1.24.0-alpha'

    implementation 'com.sparkjava:spark-core:2.9.4'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'com.lmax:disruptor:3.3.11'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.quickfixj:quickfixj-all:2.3.1'

    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    compileOnly 'org.projectlombok:lombok:1.18.26'

    // Use JUnit for testing.
    testImplementation 'junit:junit:4.13.2'
}

test {
    // Discover and execute JUnit4-based tests
    useJUnit()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // Fail the 'test' task on the first test failure
    failFast = true
}

tasks.withType(JavaCompile) {
    // set the -Xlint:deprecation flag
    options.deprecation = true
}
